(* |> List.map *)
(*   (fun s -> *)
(*      (\* set of subseqs where length < 6, the max digit length *\) *)
(*      s *)
(*      |> String.fold_left (fun acc c -> c::acc) [] |> List.rev (\* convert string to char list *\) *)
(*      |> List.mapi (fun i c -> *)
(*          (\* generates the 6 subsets from a char c of string s *\) *)
(*          List.fold_left *)
(*            (fun (ss, acc) c -> (c::ss, (c::ss)::acc)) *)
(*            ([], []) *)
(*            (List.init 6 (fun j -> if i+j < String.length s then s.[i+j] else s.[i])) |> fst *)
(*        ) *)
(*      (\*|> List.concat*\) (\* we admit that no more than one of the 6 subseqs will be valid at the end of algorithms *\) *)

(*   ) *)
